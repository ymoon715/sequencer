{"version":3,"sources":["components/sequencer/Sequencer.js","App.js","serviceWorker.js","index.js","samples/ClosedHiHat.mp3","samples/OpenHiHat.mp3","samples/Kick.mp3","samples/Rim.mp3","samples/Snare.mp3","samples/Bass.mp3","samples/Chord1.mp3","samples/Chord2.mp3","samples/Chord3.mp3","samples/Chord4.mp3","samples/SFX.mp3"],"names":["window","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","audioCtx","AudioContext","webkitAudioContext","gainNode","createGain","biquadFilter","createBiquadFilter","compressor","createDynamicsCompressor","delayNode","createDelay","visualizer","createAnalyser","Sequencer","state","load","sequencer","step","steps","playing","sample","bpm","gain","type","detune","frequency","Q","biGain","threshold","knee","ratio","attack","release","delay","togglePads","group","pad","clonedPads","_this","newPad","setState","playSample","audioContext","audioBuffer","sampleSource","createBufferSource","buffer","connect","destination","start","playLine","_this$state","i","length","visualize","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","canvas","document","querySelector","canvasCtx","getContext","width","height","clearRect","requestAnimationFrame","getByteFrequencyData","filter","a","fillStyle","fillRect","barHeight","x","barWidth","changeBPM","e","clearInterval","interval","target","value","setInterval","gainChange","playSequencer","filterType","changeFilter","name","getAttribute","Object","defineProperty","changeBiGain","changeCompressor","changeDelay","delayTime","_this2","this","th","setupSample","call","then","files","fetch","response","arrayBuffer","decodeAudioData","filePath","CHH","OHH","Kick","Rim","Snare","Bass","Chord1","Chord2","Chord3","Chord4","SFX","getFile","push","content","_this3","_this$state2","classes","props","react_default","createElement","className","onClick","orient","min","max","onChange","Math","floor","map","key","concat","b","c","classNames","active","on","Select_default","root","select","selectMenu","menu","IconComponent","MenuItem_default","item","selected","focused","Component","withStyles","background","color","fontSize","borderRadius","selectTwo","itemtwo","App","sequencer_Sequencer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5d2f96e0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport CHH from \"../../samples/ClosedHiHat.mp3\";\r\nimport OHH from \"../../samples/OpenHiHat.mp3\";\r\nimport Kick from \"../../samples/Kick.mp3\";\r\nimport Rim from \"../../samples/Rim.mp3\";\r\nimport Snare from \"../../samples/Snare.mp3\";\r\nimport Bass from \"../../samples/Bass.mp3\";\r\nimport Chord1 from \"../../samples/Chord1.mp3\";\r\nimport Chord2 from \"../../samples/Chord2.mp3\";\r\nimport Chord3 from \"../../samples/Chord3.mp3\";\r\nimport Chord4 from \"../../samples/Chord4.mp3\";\r\nimport SFX from \"../../samples/SFX.mp3\";\r\nimport \"../../stylesheets/Sequencer.css\";\r\n// create audio context\r\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\r\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\r\nconst audioCtx = new AudioContext();\r\nconst gainNode = audioCtx.createGain();\r\nconst biquadFilter = audioCtx.createBiquadFilter();\r\nconst compressor = audioCtx.createDynamicsCompressor();\r\nconst delayNode = audioCtx.createDelay(5);\r\nconst visualizer = audioCtx.createAnalyser();\r\n\r\nconst styles = {\r\n  select: {\r\n    background: \"#2a333c\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: 8,\r\n    borderRadius: 5\r\n  },\r\n  selectTwo: {\r\n    background: \"#2a333c\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: 12,\r\n    borderRadius: 5\r\n  },\r\n  menu: {\r\n    background: \"#2a333c\",\r\n    borderRadius: 5\r\n  },\r\n  item: {\r\n    background: \"#000000\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: 8\r\n  },\r\n  itemtwo: {\r\n    background: \"#000000\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: 12\r\n  },\r\n  focused: {\r\n    background: \"#0A0D0F\",\r\n    color: \"#000000\"\r\n  }\r\n};\r\n\r\nclass Sequencer extends Component {\r\n  state = {\r\n    load: true,\r\n    sequencer: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ],\r\n    step: 0,\r\n    steps: 15,\r\n    playing: false,\r\n    sample: null,\r\n    bpm: 100,\r\n    gain: 1,\r\n    type: \"highpass\",\r\n    detune: 0,\r\n    frequency: 350,\r\n    Q: 1,\r\n    biGain: 0,\r\n    threshold: -24,\r\n    knee: 30,\r\n    ratio: 12,\r\n    attack: 0.003,\r\n    release: 0.25,\r\n    delay: 0\r\n  };\r\n  //load samples before allowing user to play around\r\n  componentDidMount() {\r\n    let th = this;\r\n    this.setupSample.call(this).then(sample => {\r\n      th.setState({ load: false, sample: sample });\r\n      biquadFilter.type = \"highpass\";\r\n      this.visualize();\r\n    });\r\n  }\r\n  // toggle pads to activate pad\r\n  togglePads = (group, pad) => {\r\n    const clonedPads = this.state.sequencer;\r\n    let newPad = this.state.sequencer[group];\r\n    if (this.state.sequencer[group][pad] === 0) {\r\n      newPad[pad] = 1;\r\n      clonedPads[group] = newPad;\r\n      this.setState({ sequencer: clonedPads });\r\n    } else if (this.state.sequencer[group][pad] === 1) {\r\n      newPad[pad] = 0;\r\n      clonedPads[group] = newPad;\r\n      this.setState({ sequencer: clonedPads });\r\n    }\r\n  };\r\n  // fetch files and buffer them\r\n  async getFile(audioContext, files) {\r\n    const response = await fetch(files);\r\n    const arrayBuffer = await response.arrayBuffer();\r\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\r\n    return audioBuffer;\r\n  }\r\n\r\n  async setupSample() {\r\n    const filePath = [\r\n      CHH,\r\n      OHH,\r\n      Kick,\r\n      Rim,\r\n      Snare,\r\n      Bass,\r\n      Chord1,\r\n      Chord2,\r\n      Chord3,\r\n      Chord4,\r\n      SFX\r\n    ];\r\n    const sample = [];\r\n    for (let i = 0; i < filePath.length; i++) {\r\n      sample.push(await this.getFile(audioCtx, filePath[i]));\r\n    }\r\n    return sample;\r\n  }\r\n\r\n  playSample = (audioContext, audioBuffer) => {\r\n    const sampleSource = audioContext.createBufferSource();\r\n    sampleSource.buffer = audioBuffer;\r\n    sampleSource.connect(visualizer);\r\n    visualizer.connect(biquadFilter);\r\n    biquadFilter.connect(compressor);\r\n    compressor.connect(delayNode);\r\n    delayNode.connect(gainNode);\r\n    gainNode.connect(audioCtx.destination);\r\n    sampleSource.start();\r\n    return sampleSource;\r\n  };\r\n\r\n  playLine = () => {\r\n    const { sample, sequencer } = this.state;\r\n    for (let i = 0; i < this.state.sample.length; i++) {\r\n      if (sequencer[this.state.step][i] === 1) {\r\n        this.playSample(audioCtx, sample[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  visualize = () => {\r\n    // if (this.state.playing === true) {\r\n    visualizer.fftSize = 512;\r\n    const bufferLength = visualizer.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n    const canvas = document.querySelector(\".visualizer\");\r\n    const canvasCtx = canvas.getContext(\"2d\");\r\n    let width = canvas.width;\r\n    let height = canvas.height;\r\n\r\n    canvasCtx.clearRect(0, 0, width, height);\r\n    const drawVisual = requestAnimationFrame(this.visualize);\r\n    visualizer.getByteFrequencyData(dataArray);\r\n    if (dataArray.filter(a => a !== 0).length !== 0) {\r\n      canvasCtx.fillStyle = \"rgb(0,0,0)\";\r\n      canvasCtx.fillRect(0, 0, width, height);\r\n\r\n      let x = 0;\r\n      let barWidth = (width / bufferLength) * 2.5;\r\n      let barHeight;\r\n      for (let i = 0; i < bufferLength; i++) {\r\n        barHeight = dataArray[i];\r\n        canvasCtx.fillStyle = \"rgb(0,255,0)\";\r\n        //\"rgb(\" + (barHeight + 100) + \",50,50)\";\r\n        canvasCtx.fillRect(x, height - barHeight / 2, barWidth, barHeight / 2);\r\n        x += barWidth + 1;\r\n      }\r\n      //}\r\n    }\r\n  };\r\n\r\n  changeBPM = e => {\r\n    clearInterval(this.interval);\r\n    this.setState({ bpm: e.target.value }, () => {\r\n      if (this.state.playing === true) {\r\n        this.interval = setInterval(() => {\r\n          this.playLine();\r\n          this.setState({\r\n            step:\r\n              this.state.step + 1 > this.state.steps ? 0 : this.state.step + 1\r\n          });\r\n        }, (60 * 1000) / this.state.bpm / 2);\r\n      }\r\n    });\r\n  };\r\n  gainChange = e => {\r\n    this.setState({ gain: e.target.value }, () => {\r\n      if (this.state.gain >= 0.93) {\r\n        gainNode.gain.value = 1;\r\n      } else if (this.state.gain <= 0.08) {\r\n        gainNode.gain.value = 0;\r\n      } else {\r\n        gainNode.gain.value = this.state.gain;\r\n      }\r\n    });\r\n  };\r\n\r\n  // lookahead = (60 * 1000) / this.state.bpm / 2\r\n  playSequencer = () => {\r\n    if (!this.state.playing) {\r\n      this.setState({ playing: true });\r\n      this.interval = setInterval(() => {\r\n        this.playLine();\r\n        this.setState({\r\n          step: this.state.step + 1 > this.state.steps ? 0 : this.state.step + 1\r\n        });\r\n      }, (60 * 1000) / this.state.bpm / 2);\r\n    } else {\r\n      this.setState({ playing: false, step: 0 });\r\n      clearInterval(this.interval);\r\n    }\r\n  };\r\n\r\n  filterType = e => {\r\n    this.setState(\r\n      { type: e.target.value },\r\n      () => (biquadFilter.type = this.state.type)\r\n    );\r\n  };\r\n\r\n  changeFilter = e => {\r\n    let name = e.target.getAttribute(\"name\");\r\n    this.setState(\r\n      { [e.target.name]: e.target.value },\r\n      () => (biquadFilter[name].value = this.state[name])\r\n    );\r\n  };\r\n\r\n  changeBiGain = e => {\r\n    this.setState(\r\n      { biGain: e.target.value },\r\n      () => (biquadFilter.gain.value = this.state.biGain)\r\n    );\r\n  };\r\n\r\n  changeCompressor = e => {\r\n    let name = e.target.getAttribute(\"name\");\r\n    this.setState(\r\n      { [e.target.name]: e.target.value },\r\n      () => (compressor[name].value = this.state[name])\r\n    );\r\n  };\r\n\r\n  changeDelay = e => {\r\n    this.setState(\r\n      { delay: e.target.value },\r\n      () => (delayNode.delayTime.value = this.state.delay)\r\n    );\r\n  };\r\n  render() {\r\n    const { sample, step } = this.state;\r\n    const { classes } = this.props;\r\n    let playing;\r\n    let gainValue = this.state.gain;\r\n    if (this.state.playing) {\r\n      playing = <i className=\"fas fa-stop\" />;\r\n    } else {\r\n      playing = <i className=\"fas fa-play\" />;\r\n    }\r\n    let content;\r\n    if (sample === null) {\r\n      content = \"Loading\";\r\n    } else {\r\n      content = (\r\n        <div className=\"container\">\r\n          <div className=\"controls\">\r\n            <div className=\"main-controls\">\r\n              <div className=\"control-container\">\r\n                <span>Play/Stop:</span>\r\n                <div className=\"play-stop\" onClick={this.playSequencer}>\r\n                  {playing}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"control-container\">\r\n                <span>BPM: </span>\r\n                <div className=\"play-stop\">\r\n                  <input\r\n                    orient=\"circular\"\r\n                    name=\"bpm\"\r\n                    type=\"range\"\r\n                    min=\"40\"\r\n                    max=\"300\"\r\n                    step=\"any\"\r\n                    value={this.state.bpm}\r\n                    onChange={this.changeBPM}\r\n                  />\r\n                  <p>{Math.floor(this.state.bpm)}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"control-container\">\r\n                <span>Delay: </span>\r\n                <div className=\"play-stop\">\r\n                  <input\r\n                    name=\"delay\"\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"5\"\r\n                    step=\"any\"\r\n                    value={this.state.delay}\r\n                    onChange={this.changeDelay}\r\n                  />\r\n                  <p>{Math.floor(this.state.delay)}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"control-container\">\r\n                <span>Volume: </span>\r\n                <div className=\"play-stop\">\r\n                  <input\r\n                    name=\"gain\"\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"1\"\r\n                    step=\"any\"\r\n                    value={this.state.gain}\r\n                    onChange={this.gainChange}\r\n                  />\r\n                  <p>{Math.floor(this.state.gain * 100)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <canvas className=\"visualizer\" />\r\n          <div className=\"sequencer\">\r\n            {this.state.sequencer.map((a, i) => (\r\n              <div key={`pad-container${i}`} className=\"pad-container\">\r\n                {a.map((b, c) => (\r\n                  <div\r\n                    key={`pad-${c}`}\r\n                    className={classNames(\"pad\", {\r\n                      active: i === step,\r\n                      on: b === 1\r\n                    })}\r\n                    onClick={() => this.togglePads(i, c)}\r\n                  />\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"controls\">\r\n            <div className=\"control-container\">\r\n              <span>Compressor</span>\r\n              <div className=\"filter\">\r\n                <div className=\"control-container\">\r\n                  <span>Threshold: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"threshold\"\r\n                      type=\"range\"\r\n                      min=\"-100\"\r\n                      max=\"0\"\r\n                      step=\"any\"\r\n                      value={this.state.threshold}\r\n                      onChange={this.changeCompressor}\r\n                    />\r\n                    <p>{Math.floor(this.state.threshold)}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"control-container\">\r\n                  <span>Knee: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"knee\"\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"40\"\r\n                      step=\"any\"\r\n                      value={this.state.knee}\r\n                      onChange={this.changeCompressor}\r\n                    />\r\n                    <p>{Math.floor(this.state.knee)}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"control-container\">\r\n                  <span>Ratio: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"ratio\"\r\n                      type=\"range\"\r\n                      min=\"1\"\r\n                      max=\"20\"\r\n                      step=\"any\"\r\n                      value={this.state.ratio}\r\n                      onChange={this.changeCompressor}\r\n                    />\r\n                    <p>{Math.floor(this.state.ratio)}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"control-container\">\r\n                  <span>Attack: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"attack\"\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"1\"\r\n                      step=\"0.001\"\r\n                      value={this.state.attack}\r\n                      onChange={this.changeCompressor}\r\n                    />\r\n                    <p>{this.state.attack}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"control-container\">\r\n                  <span>Release: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"release\"\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"1\"\r\n                      step=\"0.01\"\r\n                      value={this.state.release}\r\n                      onChange={this.changeCompressor}\r\n                    />\r\n                    <p>{this.state.release}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"control-container\">\r\n              <span>Filter</span>\r\n              <div className=\"filter\">\r\n                <div className=\"control-container\">\r\n                  <span>Type:</span>\r\n                  <div className=\"play-stop\">\r\n                    <Select\r\n                      value={this.state.type}\r\n                      classes={{\r\n                        root: classes.select,\r\n                        selectMenu: classes.menu\r\n                      }}\r\n                      IconComponent={props => <p />}\r\n                      onChange={this.filterType}\r\n                    >\r\n                      <MenuItem\r\n                        value=\"lowpass\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        Low Pass\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"highpass\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        High Pass\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"bandpass\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        Band Pass\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"lowshelf\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        Low Shelf\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"highshelf\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        High Shelf\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"peaking\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        Peaking\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"notch\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        Notch\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"allpass\"\r\n                        classes={{\r\n                          root: classes.item,\r\n                          selected: classes.focused\r\n                        }}\r\n                      >\r\n                        All Pass\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"control-container\">\r\n                  <span>Frequency: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"frequency\"\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"22050\"\r\n                      step=\"any\"\r\n                      value={this.state.frequency}\r\n                      onChange={this.changeFilter}\r\n                    />\r\n                    <p>{Math.floor(this.state.frequency)}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"control-container\">\r\n                  <span>Detune: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"detune\"\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"100\"\r\n                      step=\"any\"\r\n                      value={this.state.detune}\r\n                      onChange={this.changeFilter}\r\n                    />\r\n                    <p>{Math.floor(this.state.detune)}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"control-container\">\r\n                  <span>Q: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"Q\"\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"40\"\r\n                      step=\"any\"\r\n                      value={this.state.Q}\r\n                      onChange={this.changeFilter}\r\n                    />\r\n                    <p>{Math.floor(this.state.Q)}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"control-container\">\r\n                  <span>Gain: </span>\r\n                  <div className=\"play-stop\">\r\n                    <input\r\n                      name=\"biGain\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"any\"\r\n                      value={this.state.biGain}\r\n                      onChange={this.changeBiGain}\r\n                    />\r\n                    <p>{Math.floor(this.state.biGain)}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"application\">\r\n        <div className=\"title\">\r\n          <h3>MOON SEQUENCER</h3>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"spacer\" />\r\n          <div className=\"note-name-container\">\r\n            <div className=\"note-name\">\r\n              <h3>Closed Hi-Hat</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Open Hi-Hat</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Kick</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Rim</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Snare</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Bass</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Chord 1</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Chord 2</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Chord 3</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>Chord 4</h3>\r\n            </div>\r\n            <div className=\"note-name\">\r\n              <h3>SFX</h3>\r\n            </div>\r\n          </div>\r\n          {content}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Sequencer);\r\n","import React, { Component } from \"react\";\nimport Sequencer from \"./components/sequencer/Sequencer\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Sequencer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ClosedHiHat.e22b64e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/OpenHiHat.8fe135c2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kick.382936a3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Rim.c0acb0e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Snare.46c08ecd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Bass.3857e4bf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord1.3ec5329c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord2.cc36e9c7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord3.7614c9e3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Chord4.4b3a2235.mp3\";","module.exports = __webpack_public_path__ + \"static/media/SFX.9cb8458f.mp3\";"],"sourceRoot":""}